name: Release

on:
  push:
    tags:
      - "*"
env:
  PYTHON_VERSION: "3.12"
  NODE_VERSION: "20.11.1"

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: astral-sh/setup-uv@v2
      - name: Setup environment
        run: uv venv --python ${{ env.PYTHON_VERSION }} && source .venv/bin/activate
      - name: Install dependencies
        run: uv pip install --all-extras -r pyproject.toml
      - name: Run pre-commit
        run: uvx pre-commit run -a
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn
          cache-dependency-path: "./ui/yarn.lock"
      - name: Install UI dependencies
        run: yarn --frozen-lockfile
        working-directory: ui
      - name: Update package version to PEP 440-compliant release tag
        run: sed -i "s/0.0.0/$(git describe --tags --abbrev=0)/g" pyproject.toml
      - name: Run build script to build UI and bundle into Python tarball
        run: ./scripts/build.sh
      - name: Generate a changelog
        run: |
          git log $(git describe --tags --abbrev=0 $(git describe --tags --abbrev=0)^)..HEAD --oneline > CHANGELOG.txt
      - uses: actions/upload-artifact@v4
        with:
          name: changelog
          path: "./CHANGELOG.txt"
      - name: Push 'autoarena' dist to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true
      - name: Push 'autoarena' dist to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip-existing: true
      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*.tar.gz
          body_path: "./CHANGELOG.txt"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
